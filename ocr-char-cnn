{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/adeylol/ocr-rekognition-using-cnn?scriptVersionId=223610337\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"5a146109","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-02-20T18:13:39.134918Z","iopub.status.busy":"2025-02-20T18:13:39.134669Z","iopub.status.idle":"2025-02-20T18:13:39.813723Z","shell.execute_reply":"2025-02-20T18:13:39.813079Z"},"papermill":{"duration":0.685382,"end_time":"2025-02-20T18:13:39.815353","exception":false,"start_time":"2025-02-20T18:13:39.129971","status":"completed"},"tags":[]},"outputs":[],"source":["import pandas as pd\n","import os"]},{"cell_type":"markdown","id":"209cf94f","metadata":{"papermill":{"duration":0.003155,"end_time":"2025-02-20T18:13:39.822551","exception":false,"start_time":"2025-02-20T18:13:39.819396","status":"completed"},"tags":[]},"source":["# Lets read the input data from Dataset "]},{"cell_type":"code","execution_count":2,"id":"26d7330c","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:13:39.830156Z","iopub.status.busy":"2025-02-20T18:13:39.829788Z","iopub.status.idle":"2025-02-20T18:13:40.312864Z","shell.execute_reply":"2025-02-20T18:13:40.31187Z"},"papermill":{"duration":0.488486,"end_time":"2025-02-20T18:13:40.314421","exception":false,"start_time":"2025-02-20T18:13:39.825935","status":"completed"},"tags":[]},"outputs":[],"source":["# List to store data\n","data = []\n","\n","training_data = '/kaggle/input/standard-ocr-dataset/data/training_data'\n","label = '/kaggle/input/standard-ocr-dataset/data/training_data/0'\n","\n","# Loop through character folders (0, 1, ...)\n","for label in os.listdir(training_data):\n","    label_path = os.path.join(training_data, label)\n","    \n","    # Check if it's a directory\n","    if os.path.isdir(label_path):\n","        # Loop through images in the directory\n","        for img_name in os.listdir(label_path):\n","            img_path = os.path.join(label_path, img_name)\n","            data.append((img_path, label))  # Store image path and label\n","\n","# Convert to DataFrame\n","df = pd.DataFrame(data, columns=[\"image_path\", \"label\"])"]},{"cell_type":"code","execution_count":3,"id":"d02e0a22","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:13:40.322634Z","iopub.status.busy":"2025-02-20T18:13:40.322313Z","iopub.status.idle":"2025-02-20T18:13:40.343157Z","shell.execute_reply":"2025-02-20T18:13:40.342393Z"},"papermill":{"duration":0.026475,"end_time":"2025-02-20T18:13:40.344483","exception":false,"start_time":"2025-02-20T18:13:40.318008","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image_path</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20623</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>J</td>\n","    </tr>\n","    <tr>\n","      <th>20624</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>J</td>\n","    </tr>\n","    <tr>\n","      <th>20625</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>J</td>\n","    </tr>\n","    <tr>\n","      <th>20626</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>J</td>\n","    </tr>\n","    <tr>\n","      <th>20627</th>\n","      <td>/kaggle/input/standard-ocr-dataset/data/traini...</td>\n","      <td>J</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20628 rows × 2 columns</p>\n","</div>"],"text/plain":["                                              image_path label\n","0      /kaggle/input/standard-ocr-dataset/data/traini...     N\n","1      /kaggle/input/standard-ocr-dataset/data/traini...     N\n","2      /kaggle/input/standard-ocr-dataset/data/traini...     N\n","3      /kaggle/input/standard-ocr-dataset/data/traini...     N\n","4      /kaggle/input/standard-ocr-dataset/data/traini...     N\n","...                                                  ...   ...\n","20623  /kaggle/input/standard-ocr-dataset/data/traini...     J\n","20624  /kaggle/input/standard-ocr-dataset/data/traini...     J\n","20625  /kaggle/input/standard-ocr-dataset/data/traini...     J\n","20626  /kaggle/input/standard-ocr-dataset/data/traini...     J\n","20627  /kaggle/input/standard-ocr-dataset/data/traini...     J\n","\n","[20628 rows x 2 columns]"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["# Display first few rows\n","df"]},{"cell_type":"code","execution_count":4,"id":"0f5eaefa","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:13:40.353537Z","iopub.status.busy":"2025-02-20T18:13:40.353286Z","iopub.status.idle":"2025-02-20T18:13:40.371549Z","shell.execute_reply":"2025-02-20T18:13:40.370652Z"},"papermill":{"duration":0.024154,"end_time":"2025-02-20T18:13:40.372746","exception":false,"start_time":"2025-02-20T18:13:40.348592","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 20628 entries, 0 to 20627\n","Data columns (total 2 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   image_path  20628 non-null  object\n"," 1   label       20628 non-null  object\n","dtypes: object(2)\n","memory usage: 322.4+ KB\n"]}],"source":["df.info()"]},{"cell_type":"markdown","id":"70234b03","metadata":{"papermill":{"duration":0.003539,"end_time":"2025-02-20T18:13:40.380144","exception":false,"start_time":"2025-02-20T18:13:40.376605","status":"completed"},"tags":[]},"source":["# Importing the neccesary libraries"]},{"cell_type":"code","execution_count":5,"id":"3339ef31","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:13:40.38779Z","iopub.status.busy":"2025-02-20T18:13:40.387587Z","iopub.status.idle":"2025-02-20T18:13:44.819268Z","shell.execute_reply":"2025-02-20T18:13:44.818187Z"},"papermill":{"duration":4.43772,"end_time":"2025-02-20T18:13:44.82134","exception":false,"start_time":"2025-02-20T18:13:40.38362","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: tensorflow in /usr/local/lib/python3.10/dist-packages (2.17.1)\r\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.2.2)\r\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.26.4)\r\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.5)\r\n","Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.4.0)\r\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.6.3)\r\n","Requirement already satisfied: flatbuffers>=24.3.25 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (24.3.25)\r\n","Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.6.0)\r\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.2.0)\r\n","Requirement already satisfied: h5py>=3.10.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.12.1)\r\n","Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (18.1.1)\r\n","Requirement already satisfied: ml-dtypes<0.5.0,>=0.3.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.4.1)\r\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.4.0)\r\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from tensorflow) (24.2)\r\n","Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.20.3)\r\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.32.3)\r\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow) (75.1.0)\r\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.17.0)\r\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.5.0)\r\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (4.12.2)\r\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.17.0)\r\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (1.68.1)\r\n","Requirement already satisfied: tensorboard<2.18,>=2.17 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (2.17.1)\r\n","Requirement already satisfied: keras>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (3.5.0)\r\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow) (0.37.1)\r\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\r\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\r\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\r\n","Requirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy) (1.3.8)\r\n","Requirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy) (1.2.4)\r\n","Requirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy) (0.1.1)\r\n","Requirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy) (2025.0.1)\r\n","Requirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy) (2022.0.0)\r\n","Requirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy) (2.4.1)\r\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.3.1)\r\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.12.1)\r\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.55.3)\r\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.7)\r\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (11.0.0)\r\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.2.0)\r\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow) (0.45.1)\r\n","Requirement already satisfied: rich in /usr/local/lib/python3.10/dist-packages (from keras>=3.2.0->tensorflow) (13.9.4)\r\n","Requirement already satisfied: namex in /usr/local/lib/python3.10/dist-packages (from keras>=3.2.0->tensorflow) (0.0.8)\r\n","Requirement already satisfied: optree in /usr/local/lib/python3.10/dist-packages (from keras>=3.2.0->tensorflow) (0.13.1)\r\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorflow) (3.4.0)\r\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorflow) (3.10)\r\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorflow) (2.2.3)\r\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorflow) (2024.12.14)\r\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.18,>=2.17->tensorflow) (3.7)\r\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.18,>=2.17->tensorflow) (0.7.2)\r\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.18,>=2.17->tensorflow) (3.1.3)\r\n","Requirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy) (2024.2.0)\r\n","Requirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy) (2022.0.0)\r\n","Requirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy) (1.2.0)\r\n","Requirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy) (2024.2.0)\r\n","Requirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy) (2024.2.0)\r\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.18,>=2.17->tensorflow) (3.0.2)\r\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich->keras>=3.2.0->tensorflow) (3.0.0)\r\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich->keras>=3.2.0->tensorflow) (2.18.0)\r\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich->keras>=3.2.0->tensorflow) (0.1.2)\r\n"]}],"source":["!pip install tensorflow pandas numpy matplotlib"]},{"cell_type":"code","execution_count":6,"id":"7e7d867e","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:13:44.83085Z","iopub.status.busy":"2025-02-20T18:13:44.830606Z","iopub.status.idle":"2025-02-20T18:13:55.856269Z","shell.execute_reply":"2025-02-20T18:13:55.855324Z"},"papermill":{"duration":11.032069,"end_time":"2025-02-20T18:13:55.857886","exception":false,"start_time":"2025-02-20T18:13:44.825817","status":"completed"},"tags":[]},"outputs":[],"source":["import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras.preprocessing.image import load_img, img_to_array\n","from tensorflow.keras.utils import to_categorical\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n","import numpy as np\n","import pandas as pd\n","import os\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","execution_count":7,"id":"cdbe66af","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:13:55.867626Z","iopub.status.busy":"2025-02-20T18:13:55.867182Z","iopub.status.idle":"2025-02-20T18:13:55.871022Z","shell.execute_reply":"2025-02-20T18:13:55.870358Z"},"papermill":{"duration":0.009737,"end_time":"2025-02-20T18:13:55.872119","exception":false,"start_time":"2025-02-20T18:13:55.862382","status":"completed"},"tags":[]},"outputs":[],"source":["import string\n","\n","# Create a dictionary to map labels (0-9, A-Z) to unique integers\n","characters = list(string.digits + string.ascii_uppercase)  # ['0', '1', ..., '9', 'A', ..., 'Z']\n","char_to_int = {char: i for i, char in enumerate(characters)}\n","\n","# Number of unique classes\n","num_classes = len(char_to_int)\n"]},{"cell_type":"code","execution_count":8,"id":"0dc86ee4","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:13:55.880868Z","iopub.status.busy":"2025-02-20T18:13:55.88066Z","iopub.status.idle":"2025-02-20T18:15:25.08623Z","shell.execute_reply":"2025-02-20T18:15:25.085516Z"},"papermill":{"duration":89.211738,"end_time":"2025-02-20T18:15:25.087878","exception":false,"start_time":"2025-02-20T18:13:55.87614","status":"completed"},"tags":[]},"outputs":[],"source":["# Image size\n","IMG_SIZE = (32, 32)\n","\n","def load_images(df):\n","    images = []\n","    labels = []\n","    \n","    for _, row in df.iterrows():\n","        img_path = row[\"image_path\"]\n","        label = row[\"label\"]  # Keep as string\n","        \n","        # Convert label to integer using our mapping\n","        label_int = char_to_int[label]\n","\n","        # Load image and convert to array\n","        img = load_img(img_path, target_size=IMG_SIZE, color_mode=\"grayscale\")\n","        img_array = img_to_array(img) / 255.0  # Normalize\n","\n","        images.append(img_array)\n","        labels.append(label_int)  # Store integer labels\n","\n","    return np.array(images), np.array(labels)\n","\n","# Load training images\n","X_train, y_train = load_images(df)\n","\n","# Reshape images to match CNN input\n","X_train = X_train.reshape(-1, 32, 32, 1)  # (samples, height, width, channels)\n","\n","# Convert labels to categorical (one-hot encoding)\n","y_train = to_categorical(y_train, num_classes)\n"]},{"cell_type":"code","execution_count":9,"id":"3ba13268","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:15:25.097662Z","iopub.status.busy":"2025-02-20T18:15:25.097425Z","iopub.status.idle":"2025-02-20T18:15:25.149256Z","shell.execute_reply":"2025-02-20T18:15:25.14851Z"},"papermill":{"duration":0.057898,"end_time":"2025-02-20T18:15:25.150513","exception":false,"start_time":"2025-02-20T18:15:25.092615","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Unique training labels: (array([0., 1.]), array([721980,  20628]))\n"]}],"source":["print(\"Unique training labels:\", np.unique(y_train, return_counts=True))"]},{"cell_type":"code","execution_count":10,"id":"064cea54","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:15:25.15987Z","iopub.status.busy":"2025-02-20T18:15:25.159657Z","iopub.status.idle":"2025-02-20T18:15:27.362036Z","shell.execute_reply":"2025-02-20T18:15:27.360949Z"},"papermill":{"duration":2.208297,"end_time":"2025-02-20T18:15:27.36331","exception":false,"start_time":"2025-02-20T18:15:25.155013","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n","</pre>\n"],"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">30</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">30</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)          │             <span style=\"color: #00af00; text-decoration-color: #00af00\">320</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ max_pooling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)          │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">13</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">13</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)          │          <span style=\"color: #00af00; text-decoration-color: #00af00\">18,496</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">6</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)            │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ flatten (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2304</span>)                │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │         <span style=\"color: #00af00; text-decoration-color: #00af00\">295,040</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">36</span>)                  │           <span style=\"color: #00af00; text-decoration-color: #00af00\">4,644</span> │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","</pre>\n"],"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n","│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m30\u001b[0m, \u001b[38;5;34m30\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │             \u001b[38;5;34m320\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m13\u001b[0m, \u001b[38;5;34m13\u001b[0m, \u001b[38;5;34m64\u001b[0m)          │          \u001b[38;5;34m18,496\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m6\u001b[0m, \u001b[38;5;34m6\u001b[0m, \u001b[38;5;34m64\u001b[0m)            │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ flatten (\u001b[38;5;33mFlatten\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m2304\u001b[0m)                │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │         \u001b[38;5;34m295,040\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dropout (\u001b[38;5;33mDropout\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n","├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n","│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m36\u001b[0m)                  │           \u001b[38;5;34m4,644\u001b[0m │\n","└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">318,500</span> (1.21 MB)\n","</pre>\n"],"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m318,500\u001b[0m (1.21 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">318,500</span> (1.21 MB)\n","</pre>\n"],"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m318,500\u001b[0m (1.21 MB)\n"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"],"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"]},"metadata":{},"output_type":"display_data"}],"source":["# Building a CNN model\n","model = Sequential([\n","    Conv2D(32, (3, 3), activation='relu', input_shape=(32, 32, 1)),\n","    MaxPooling2D((2, 2)),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D((2, 2)),\n","    Flatten(),\n","    Dense(128, activation='relu'),\n","    Dropout(0.5),\n","    Dense(num_classes, activation='softmax')  # Output layer with softmax activation\n","])\n","\n","model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","\n","# Model Summary\n","model.summary()\n"]},{"cell_type":"code","execution_count":11,"id":"c4a97dac","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:15:27.37547Z","iopub.status.busy":"2025-02-20T18:15:27.375227Z","iopub.status.idle":"2025-02-20T18:15:28.147752Z","shell.execute_reply":"2025-02-20T18:15:28.146618Z"},"papermill":{"duration":0.779776,"end_time":"2025-02-20T18:15:28.149403","exception":false,"start_time":"2025-02-20T18:15:27.369627","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Training labels distribution: (array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n","       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n","       34, 35]), array([459, 458, 458, 458, 459, 458, 458, 458, 459, 459, 458, 458, 459,\n","       459, 458, 458, 459, 459, 458, 458, 458, 459, 458, 458, 458, 458,\n","       459, 458, 458, 458, 459, 459, 458, 458, 459, 459]))\n","Validation labels distribution: (array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n","       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n","       34, 35]), array([114, 115, 115, 115, 114, 115, 115, 115, 114, 114, 115, 115, 114,\n","       114, 115, 115, 114, 114, 115, 115, 115, 114, 115, 115, 115, 115,\n","       114, 115, 115, 115, 114, 114, 115, 115, 114, 114]))\n"]}],"source":["from sklearn.model_selection import train_test_split\n","\n","# Convert labels to integers before splitting\n","y_int_labels = np.argmax(y_train, axis=1)  # Reverse one-hot encoding\n","\n","# Split data while maintaining class distribution\n","X_train, X_val, y_train_int, y_val_int = train_test_split(X_train, y_int_labels, test_size=0.2, stratify=y_int_labels, random_state=42)\n","\n","# Convert back to one-hot encoding\n","y_train = to_categorical(y_train_int, num_classes)\n","y_val = to_categorical(y_val_int, num_classes)\n","\n","# Verify class distribution\n","print(\"Training labels distribution:\", np.unique(y_train_int, return_counts=True))\n","print(\"Validation labels distribution:\", np.unique(y_val_int, return_counts=True))\n"]},{"cell_type":"code","execution_count":12,"id":"7e9455ba","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:15:28.161129Z","iopub.status.busy":"2025-02-20T18:15:28.160546Z","iopub.status.idle":"2025-02-20T18:15:28.252521Z","shell.execute_reply":"2025-02-20T18:15:28.251612Z"},"papermill":{"duration":0.099055,"end_time":"2025-02-20T18:15:28.253957","exception":false,"start_time":"2025-02-20T18:15:28.154902","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]}],"source":["from tensorflow.keras.layers import BatchNormalization\n","from tensorflow.keras.regularizers import l2\n","\n","model = Sequential([\n","    Conv2D(32, (3, 3), activation='relu', kernel_regularizer=l2(0.001), input_shape=(32, 32, 1)),\n","    BatchNormalization(),\n","    MaxPooling2D((2, 2)),\n","    Dropout(0.3),\n","\n","    Conv2D(64, (3, 3), activation='relu', kernel_regularizer=l2(0.001)),\n","    BatchNormalization(),\n","    MaxPooling2D((2, 2)),\n","    Dropout(0.3),\n","\n","    Flatten(),\n","    Dense(128, activation='relu', kernel_regularizer=l2(0.001)),\n","    Dropout(0.5),\n","    \n","    Dense(num_classes, activation='softmax')  # Output layer\n","])\n","\n","# Compile with Adam optimizer (see Step 3)\n","from tensorflow.keras.optimizers import Adam\n","\n","# Use a smaller learning rate\n","model.compile(optimizer=Adam(learning_rate=0.0001), loss='categorical_crossentropy', metrics=['accuracy'])\n","\n","\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","\n","datagen = ImageDataGenerator(\n","    rotation_range=10,\n","    width_shift_range=0.1,\n","    height_shift_range=0.1,\n","    zoom_range=0.1\n",")\n","\n","# Fit generator to training data\n","datagen.fit(X_train)"]},{"cell_type":"code","execution_count":13,"id":"0f358f3d","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:15:28.26523Z","iopub.status.busy":"2025-02-20T18:15:28.264947Z","iopub.status.idle":"2025-02-20T18:17:46.569492Z","shell.execute_reply":"2025-02-20T18:17:46.568771Z"},"papermill":{"duration":138.31158,"end_time":"2025-02-20T18:17:46.570787","exception":false,"start_time":"2025-02-20T18:15:28.259207","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/20\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:122: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 27ms/step - accuracy: 0.0698 - loss: 4.3640 - val_accuracy: 0.4998 - val_loss: 2.3412\n","Epoch 2/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 13ms/step - accuracy: 0.2723 - loss: 2.8930 - val_accuracy: 0.8204 - val_loss: 1.0844\n","Epoch 3/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.4412 - loss: 2.2284 - val_accuracy: 0.8669 - val_loss: 0.7942\n","Epoch 4/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.5357 - loss: 1.8445 - val_accuracy: 0.8997 - val_loss: 0.6467\n","Epoch 5/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.6148 - loss: 1.5817 - val_accuracy: 0.9103 - val_loss: 0.5821\n","Epoch 6/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.6679 - loss: 1.3689 - val_accuracy: 0.9215 - val_loss: 0.5411\n","Epoch 7/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.7063 - loss: 1.2281 - val_accuracy: 0.9241 - val_loss: 0.5227\n","Epoch 8/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.7494 - loss: 1.1039 - val_accuracy: 0.9304 - val_loss: 0.4880\n","Epoch 9/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.7621 - loss: 1.0573 - val_accuracy: 0.9333 - val_loss: 0.4698\n","Epoch 10/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.7827 - loss: 0.9579 - val_accuracy: 0.9404 - val_loss: 0.4505\n","Epoch 11/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8048 - loss: 0.9095 - val_accuracy: 0.9367 - val_loss: 0.4456\n","Epoch 12/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8134 - loss: 0.8483 - val_accuracy: 0.9447 - val_loss: 0.4290\n","Epoch 13/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8199 - loss: 0.8355 - val_accuracy: 0.9450 - val_loss: 0.4177\n","Epoch 14/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 11ms/step - accuracy: 0.8329 - loss: 0.7899 - val_accuracy: 0.9476 - val_loss: 0.4073\n","Epoch 15/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8489 - loss: 0.7407 - val_accuracy: 0.9474 - val_loss: 0.4012\n","Epoch 16/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8429 - loss: 0.7373 - val_accuracy: 0.9472 - val_loss: 0.3931\n","Epoch 17/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8535 - loss: 0.6941 - val_accuracy: 0.9501 - val_loss: 0.3896\n","Epoch 18/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8558 - loss: 0.6916 - val_accuracy: 0.9496 - val_loss: 0.3823\n","Epoch 19/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8639 - loss: 0.6600 - val_accuracy: 0.9489 - val_loss: 0.3845\n","Epoch 20/20\n","\u001b[1m516/516\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 12ms/step - accuracy: 0.8732 - loss: 0.6516 - val_accuracy: 0.9523 - val_loss: 0.3658\n"]}],"source":["history = model.fit(datagen.flow(X_train, y_train, batch_size=32), \n","                    epochs=20, \n","                    validation_data=(X_val, y_val))"]},{"cell_type":"code","execution_count":14,"id":"4472b91d","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:17:46.781947Z","iopub.status.busy":"2025-02-20T18:17:46.781663Z","iopub.status.idle":"2025-02-20T18:17:46.958763Z","shell.execute_reply":"2025-02-20T18:17:46.9579Z"},"papermill":{"duration":0.28374,"end_time":"2025-02-20T18:17:46.96001","exception":false,"start_time":"2025-02-20T18:17:46.67627","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Evaluate Model Performance\n","\n","plt.plot(history.history['accuracy'], label='Train Accuracy')\n","plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n","plt.xlabel('Epoch')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","plt.show()\n"]},{"cell_type":"code","execution_count":15,"id":"78b4dfb1","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:17:47.205246Z","iopub.status.busy":"2025-02-20T18:17:47.204903Z","iopub.status.idle":"2025-02-20T18:17:47.259238Z","shell.execute_reply":"2025-02-20T18:17:47.258311Z"},"papermill":{"duration":0.158544,"end_time":"2025-02-20T18:17:47.260737","exception":false,"start_time":"2025-02-20T18:17:47.102193","status":"completed"},"tags":[]},"outputs":[],"source":["# Save the model\n","model.save(\"/kaggle/working/ocr_character_model.h5\")"]},{"cell_type":"code","execution_count":16,"id":"0c9badb1","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:17:47.476435Z","iopub.status.busy":"2025-02-20T18:17:47.476164Z","iopub.status.idle":"2025-02-20T18:17:51.005167Z","shell.execute_reply":"2025-02-20T18:17:51.004465Z"},"papermill":{"duration":3.633888,"end_time":"2025-02-20T18:17:51.006618","exception":false,"start_time":"2025-02-20T18:17:47.37273","status":"completed"},"tags":[]},"outputs":[],"source":["# Testing on testing data\n","\n","# Step 1: Load and Preprocess the Testing Data\n","#     Read the images from the test folder\n","#     Resize and normalize the images\n","#     Predict using the trained model\n","\n","import os\n","import numpy as np\n","from tensorflow.keras.preprocessing.image import load_img, img_to_array\n","\n","# Image size (same as training)\n","IMG_SIZE = (32, 32)\n","\n","# Path to testing data\n","testing_data_path = \"/kaggle/input/standard-ocr-dataset/data/testing_data\"\n","\n","# Function to load test images\n","def load_test_images(testing_data_path):\n","    test_images = []\n","    test_filenames = []\n","\n","    # Loop through character folders (0, 1, ..., A, B, ...)\n","    for label in sorted(os.listdir(testing_data_path)):  # Sort to match training order\n","        label_path = os.path.join(testing_data_path, label)\n","        \n","        if os.path.isdir(label_path):  # Ensure it's a folder\n","            for img_name in os.listdir(label_path):\n","                img_path = os.path.join(label_path, img_name)\n","                \n","                # Load image and preprocess\n","                img = load_img(img_path, target_size=IMG_SIZE, color_mode=\"grayscale\")\n","                img_array = img_to_array(img) / 255.0  # Normalize\n","                \n","                test_images.append(img_array)\n","                test_filenames.append(img_path)  # Store filename for reference\n","\n","    return np.array(test_images), test_filenames\n","\n","# Load test images\n","X_test, test_filenames = load_test_images(testing_data_path)\n","\n","# Reshape for CNN (add channel dimension)\n","X_test = X_test.reshape(-1, 32, 32, 1)\n"]},{"cell_type":"code","execution_count":17,"id":"12b07e0e","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:17:51.212817Z","iopub.status.busy":"2025-02-20T18:17:51.212523Z","iopub.status.idle":"2025-02-20T18:17:52.528117Z","shell.execute_reply":"2025-02-20T18:17:52.527081Z"},"papermill":{"duration":1.423542,"end_time":"2025-02-20T18:17:52.533841","exception":false,"start_time":"2025-02-20T18:17:51.110299","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[1m32/32\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 19ms/step\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28490.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28418.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28526.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28742.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29066.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29246.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28562.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28310.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29102.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28778.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28814.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28886.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28706.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29210.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28634.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28454.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28670.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28994.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29138.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28382.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29282.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29174.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29030.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28598.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28850.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28958.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28922.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28346.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28923.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28707.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28599.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28491.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28851.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28635.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28671.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28455.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28815.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28563.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28995.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29211.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29031.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28419.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29139.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29067.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29283.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28887.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28383.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29247.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28959.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29103.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28311.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29175.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28527.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28779.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28347.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28743.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28636.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28744.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28600.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28888.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29248.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29104.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28852.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29212.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29176.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28312.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28456.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29032.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28564.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28528.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28996.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29284.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28672.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29140.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28924.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28492.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28708.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28816.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28960.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29068.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28780.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28420.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28348.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28384.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28457.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28637.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29285.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29177.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29105.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28853.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28997.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29033.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28565.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28745.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29213.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29249.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28349.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28889.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29069.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28421.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28673.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28385.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28961.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28781.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28493.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28709.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28601.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28925.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29141.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28529.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28313.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28817.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29178.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29214.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28746.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29070.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28998.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28602.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28674.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28494.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28638.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28530.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28314.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29106.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29034.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28782.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28962.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28386.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29286.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28818.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28926.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28350.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29142.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28566.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29250.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28458.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28710.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28890.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28854.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28422.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28387.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28891.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28315.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28459.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29215.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28711.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28423.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28531.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28963.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29107.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29035.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28855.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28351.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29071.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28495.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29143.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28603.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28747.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28639.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28927.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28567.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28783.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29251.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28999.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29287.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28675.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28819.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29179.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29072.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28316.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28604.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28712.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28784.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28892.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29180.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29108.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29144.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29000.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28640.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28424.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28568.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28352.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28676.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28820.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28964.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29036.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28856.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28748.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28928.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28388.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29288.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29252.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28532.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29216.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28460.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28496.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29073.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28965.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28317.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28785.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28641.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28389.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28893.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29001.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29037.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29253.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28497.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28857.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29181.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29145.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28605.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28677.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28461.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28353.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29289.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28425.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29109.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28929.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28713.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29217.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28821.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28569.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28533.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28749.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29074.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28894.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29002.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28750.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28930.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28642.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29146.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28498.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28354.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28570.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28966.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28822.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28786.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28606.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28714.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28858.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29218.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29038.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28534.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29254.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29290.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29110.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28318.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28462.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29182.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28678.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28390.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28426.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28787.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28535.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28391.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29147.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28967.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28859.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29111.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28355.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29291.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28499.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28571.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28823.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28715.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28643.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28751.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28319.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29075.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28679.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29039.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28427.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29183.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28607.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28931.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29003.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29255.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29219.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28463.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28895.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29256.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28392.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28824.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28752.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29076.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28932.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29148.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29112.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28500.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28788.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28860.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29040.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29292.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28464.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28536.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28716.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29220.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28320.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28644.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29004.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28680.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28356.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28896.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28572.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28428.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29184.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28968.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28608.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29185.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28933.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28645.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29077.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28465.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28897.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28825.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29149.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29005.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28321.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29041.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28429.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28357.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28969.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28717.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28393.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28573.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28861.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29257.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28609.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28753.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28501.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29113.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28681.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28789.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29293.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28537.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29221.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28574.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28358.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28754.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28862.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29114.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28646.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28826.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29258.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29150.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29006.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29222.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28970.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28718.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28502.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29186.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28934.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28430.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28898.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28610.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29078.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28466.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28790.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28682.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28394.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28322.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29042.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29294.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28538.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29007.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28359.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28899.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28719.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29259.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29295.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28647.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29043.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28395.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29187.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28791.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28683.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28755.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28575.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28863.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28431.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28467.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28971.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28935.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28827.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28323.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28539.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29115.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29079.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29151.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29223.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28503.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28611.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28360.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28648.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28720.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29260.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28468.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28324.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28576.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28792.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29080.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28504.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28936.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28972.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28756.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28396.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28864.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28540.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28900.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29296.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29008.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29044.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28432.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28612.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29224.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29116.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29152.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28684.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29188.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28828.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29117.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28649.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29225.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28469.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28757.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29045.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28397.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28541.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28721.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29153.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28577.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28361.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29081.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28829.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28973.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29297.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28937.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29009.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28613.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28901.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29261.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29189.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28325.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28865.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28505.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28685.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28433.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28793.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28902.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28650.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29046.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28758.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28398.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28614.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29262.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29298.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29082.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28506.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28578.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28794.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28326.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28470.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29118.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29154.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28722.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28542.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28974.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29190.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28362.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28830.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29226.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28434.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28866.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28938.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29010.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28686.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28759.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28651.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28687.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29155.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29299.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28831.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28723.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29191.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28363.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29119.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28939.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28867.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29083.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28543.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28327.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29227.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28975.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28795.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28615.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28471.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28507.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29263.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28903.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28435.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28399.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29011.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29047.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28579.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28436.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29012.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28328.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29264.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28796.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29120.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28940.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28472.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29192.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28652.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28904.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28976.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28364.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29228.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28688.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29300.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28724.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28832.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29156.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28400.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28868.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28616.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28544.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29084.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28508.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28760.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29048.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28580.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28689.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29121.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28401.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29229.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29013.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28797.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29049.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28329.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29265.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28617.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28437.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28653.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29085.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28905.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28581.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28545.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29157.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28833.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28365.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29193.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28473.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28509.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28941.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28725.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29301.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28761.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28869.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28977.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29050.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28942.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28366.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28870.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29014.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28546.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28798.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29158.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28402.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28474.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28690.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28438.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28762.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28834.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28654.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28618.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29086.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29194.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28726.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29266.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29122.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28582.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28510.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28906.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28978.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29230.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28330.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29302.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29015.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29231.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29087.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28547.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28691.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28835.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28619.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28799.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28511.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28583.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29159.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29303.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29051.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28403.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28367.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28979.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28475.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28331.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28439.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28655.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28727.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28763.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28943.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29195.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28907.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29267.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29123.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28871.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28800.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28692.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28908.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29016.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28728.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29088.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28476.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28872.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28512.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28368.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29232.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29160.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28332.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29196.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29052.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28620.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28548.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29268.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28584.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28764.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28836.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28656.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28404.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29304.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28980.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28944.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28440.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29124.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28477.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29053.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28585.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29197.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28693.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29305.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28909.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29125.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28369.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28945.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28549.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28405.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28441.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28621.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28333.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28873.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29161.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29089.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28513.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29017.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28729.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28801.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29233.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28981.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29269.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28657.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28765.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28837.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29090.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28406.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28874.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28910.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28514.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28550.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29234.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29198.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28730.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29126.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28658.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28442.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28586.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28478.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28694.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29054.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29306.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28766.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28802.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29018.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29270.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28622.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28334.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28370.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28982.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28946.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29162.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28838.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28767.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29127.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29055.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28875.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28983.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28551.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29235.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28623.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28515.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28371.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29091.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29271.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28731.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28407.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28911.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28659.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28335.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29307.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28947.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29199.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28443.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28587.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28839.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29163.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28803.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29019.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28479.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28695.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28552.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28408.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29092.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28912.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29056.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28768.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28948.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28732.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28660.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28624.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28516.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29200.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28588.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28444.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29020.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29272.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28372.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29128.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28336.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28984.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28840.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28480.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28876.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28804.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29236.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29308.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28696.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29164.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28769.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28553.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28661.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29309.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28805.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29129.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28697.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28409.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28481.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29273.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28949.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28877.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29237.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28337.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28589.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28985.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28625.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29093.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28841.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28913.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29057.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29165.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29021.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28733.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28445.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28373.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28517.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29201.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29130.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28410.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29238.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28662.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29310.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28986.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29202.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28914.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28446.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28842.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28698.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28554.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29094.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28734.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29022.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28482.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28590.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29058.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28518.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28626.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28338.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28806.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29166.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28878.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28770.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29274.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28374.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28950.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28915.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28627.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28699.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29023.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28375.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29203.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28735.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28807.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28483.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28591.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29239.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28951.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28771.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28987.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28447.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28843.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28411.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29095.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28555.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29059.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28519.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29311.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29275.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29167.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28663.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28339.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28879.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29131.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29096.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28664.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28952.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28628.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28592.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28808.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28736.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28484.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29168.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29204.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28556.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29312.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29060.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28844.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29240.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28988.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28448.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28412.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29276.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29024.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28376.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28700.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28340.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28772.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29132.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28520.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28880.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28916.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28917.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29241.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28485.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28413.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28989.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29205.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29313.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28953.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28773.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28737.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28845.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28809.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29025.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29277.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28881.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28665.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28629.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29169.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28593.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29061.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28557.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28377.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29133.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28701.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29097.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28521.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28449.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28341.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29278.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28810.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29206.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28378.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28450.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29170.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28990.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29314.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29098.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28594.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28666.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28882.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28846.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29242.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28522.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28630.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28342.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28954.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28558.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28738.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28702.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28774.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28918.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28486.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28414.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29062.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29026.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29134.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28883.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28955.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28811.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29027.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28919.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29315.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28739.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28775.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29063.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29207.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29243.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28667.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29135.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28703.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28991.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28343.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29171.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28523.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28487.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28631.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28595.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28559.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28379.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29279.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29099.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28451.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28415.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28847.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28416.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28884.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28596.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28380.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28668.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28740.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29136.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28992.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28632.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29244.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28524.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28344.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28812.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29208.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28560.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29064.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29100.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29172.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28776.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28452.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29280.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28704.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29028.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29316.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28488.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28920.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28956.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28848.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28561.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29065.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28813.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29209.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28957.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28489.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28417.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29317.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28921.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29281.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28993.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29137.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28741.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29101.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28525.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28705.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28345.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29245.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28633.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28381.png → Predicted Character: Z\n"]}],"source":["# Step 2: Make Predictions\n","# Now, let’s use the trained model to predict the characters.\n","\n","# Predict the labels\n","y_pred = model.predict(X_test)\n","\n","# Convert predictions from one-hot encoding to characters\n","y_pred_labels = np.argmax(y_pred, axis=1)\n","\n","# Convert integer labels back to characters\n","int_to_char = {i: char for char, i in char_to_int.items()}  # Reverse dictionary\n","predicted_chars = [int_to_char[i] for i in y_pred_labels]\n","\n","# Print some predictions\n","for i in range(1000):  # Show 10 sample predictions\n","    print(f\"Image: {test_filenames[i]} → Predicted Character: {predicted_chars[i]}\")\n"]},{"cell_type":"code","execution_count":18,"id":"0ffc0450","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:17:52.753807Z","iopub.status.busy":"2025-02-20T18:17:52.753527Z","iopub.status.idle":"2025-02-20T18:17:52.980891Z","shell.execute_reply":"2025-02-20T18:17:52.980059Z"},"papermill":{"duration":0.337334,"end_time":"2025-02-20T18:17:52.985722","exception":false,"start_time":"2025-02-20T18:17:52.648388","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[1m32/32\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step \n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28335.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28895.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28974.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28452.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29300.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28764.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28368.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28533.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28372.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28389.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28975.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28369.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29038.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28744.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29125.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28650.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29155.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28553.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28730.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28377.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28782.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28632.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28866.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28839.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28615.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28879.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29107.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28483.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28800.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29276.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29266.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29008.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29208.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28410.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28447.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28977.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28634.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28616.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28540.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29071.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28763.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28525.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28508.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28840.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28762.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28816.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28511.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29252.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28578.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28510.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29114.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29047.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29036.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28485.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28355.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28877.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29205.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28486.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28869.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29094.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29203.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28993.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28337.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28342.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29309.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28679.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28598.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29294.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28775.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29202.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29200.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28344.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28899.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28622.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28700.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28865.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28330.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28758.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28639.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29087.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29295.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28352.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28811.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28812.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29066.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28893.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28579.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28982.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28450.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28923.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28417.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29007.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28945.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29020.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28695.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28978.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29165.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29011.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29254.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28607.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28436.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29026.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28682.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29157.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28328.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28860.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29250.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29092.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29099.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28739.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28890.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29023.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28469.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29049.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29237.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28617.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28332.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28805.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29199.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28828.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28435.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28844.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28929.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28581.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28546.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29137.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29050.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29310.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28658.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28727.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28454.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29079.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29132.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29231.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28557.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28420.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28971.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28780.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28637.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28951.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28571.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28444.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28363.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28750.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28627.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29285.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28661.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29299.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28724.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29100.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28547.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28933.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29164.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28664.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28871.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28867.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28457.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28535.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29281.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29316.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28878.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29141.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28551.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28675.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28313.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28311.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28456.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28365.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29307.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29296.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28492.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28949.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28600.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28577.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28412.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28872.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29298.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29275.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28902.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28940.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29270.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29260.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28325.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28395.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29150.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28960.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29027.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29010.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28836.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28698.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29158.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28856.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28684.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29004.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29216.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28793.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28491.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29168.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28425.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28696.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28370.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29249.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28876.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28984.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28968.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29290.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28498.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29024.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28955.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28414.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29163.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28841.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29130.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29048.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28529.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28932.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29301.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28752.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28926.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29210.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28445.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28336.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28708.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28537.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29043.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28350.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29283.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29193.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28574.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28523.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28623.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29194.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28826.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28792.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28482.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28753.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28589.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28761.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28770.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28635.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28573.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28937.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29073.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29131.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29081.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28605.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28660.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28379.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29253.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28631.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28565.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29146.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29052.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28471.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28983.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29212.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29115.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29179.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28824.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29211.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28915.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29171.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28621.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29080.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29118.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28847.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28756.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28382.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29224.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28441.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28430.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29112.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29151.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29057.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28736.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28740.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28366.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28820.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29074.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28397.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29089.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29248.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28912.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28334.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29189.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29013.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29077.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28998.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28908.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28504.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29183.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29030.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29153.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29192.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28707.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28779.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29277.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29284.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28625.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29063.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28398.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28484.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28851.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29196.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28957.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28519.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28701.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29135.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28991.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28512.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28318.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28613.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28383.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28346.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28830.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28449.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29172.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28794.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28645.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28743.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29037.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28680.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28666.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29235.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28583.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28472.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28532.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28772.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28864.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28819.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28314.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28586.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28467.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28340.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28602.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28497.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28861.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29251.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29204.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28806.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29256.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29230.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29070.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28905.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28360.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29239.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29190.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28887.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28715.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28570.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28821.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28768.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29255.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28620.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29313.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28790.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29085.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28643.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28954.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28374.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29145.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29269.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28409.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28783.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28943.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29191.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29267.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28930.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29207.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28563.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28461.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28556.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29111.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28674.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29086.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28367.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28894.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28855.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28494.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29113.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28900.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28548.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28976.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28842.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29136.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29120.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28729.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28662.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28354.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29274.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28595.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29122.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28353.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29240.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28936.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29059.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28765.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28668.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28885.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28356.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28788.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29072.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28341.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29088.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28460.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28324.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29078.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28394.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29152.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28751.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28903.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28808.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28823.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29140.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28723.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28906.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28343.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28892.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29302.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28907.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29223.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29033.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28676.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29303.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28891.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28992.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29029.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28672.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28561.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28534.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29229.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28558.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28463.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28728.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28769.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28516.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28513.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29289.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29287.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29201.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28732.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28320.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28476.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28796.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28831.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28477.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28754.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28904.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28423.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28499.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28881.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28431.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29076.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29106.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28319.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29091.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28584.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/29014.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28716.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29247.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29241.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28802.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29176.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28555.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28642.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28419.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28996.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28541.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29053.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28918.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29035.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29117.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28722.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28606.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28654.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29286.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28969.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28941.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29031.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29025.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29105.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28786.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28433.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28709.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28814.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28440.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28380.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28522.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28338.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28470.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29019.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29166.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29219.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28944.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29154.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28843.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28953.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29174.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29064.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29041.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28386.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29173.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28845.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28922.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29160.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28980.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29083.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29175.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29162.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28734.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28569.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28327.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29148.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28609.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28965.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28517.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28889.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28873.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28544.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28448.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28973.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29288.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28421.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28797.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28747.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28487.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28501.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29109.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28601.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28381.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28407.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28614.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29075.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28784.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28585.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28310.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28835.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29226.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28362.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29144.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28401.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28748.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29315.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29195.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29042.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28468.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29015.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28507.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28749.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28560.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28710.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28597.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29147.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28804.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28619.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28323.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28988.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28733.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28478.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29018.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28785.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29021.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28373.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28415.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28655.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29108.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28594.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28972.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28649.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28683.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28408.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28464.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28459.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28773.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29218.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29012.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28771.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28422.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28713.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28588.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29182.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28766.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28901.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29116.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28446.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28514.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28916.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28913.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28720.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29184.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28552.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29279.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29002.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28714.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29060.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28690.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28938.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28656.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28651.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29138.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28503.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28956.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28592.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28989.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28959.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29265.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29169.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28657.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28970.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28371.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29101.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28542.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28536.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28694.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29134.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28638.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29264.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/29243.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28326.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28357.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28759.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29177.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28455.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28985.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28378.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29297.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28692.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28735.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28530.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28755.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29167.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28966.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28677.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28886.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28935.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28852.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28439.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28927.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28587.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28742.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29034.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29261.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28604.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28813.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28911.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28590.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29139.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28854.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29213.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28981.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28562.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29187.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28575.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28432.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28466.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28994.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28875.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29058.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28591.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28888.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29311.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29217.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28799.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28928.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28475.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28521.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29314.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29280.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28863.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28964.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29097.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28691.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28920.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28428.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28948.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28678.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28789.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29102.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28349.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29128.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28333.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29017.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28462.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28603.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28961.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28950.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28689.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29282.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28990.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28596.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28413.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28958.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29198.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29214.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28882.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29209.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29124.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28559.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28429.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28518.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28818.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28801.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/29259.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29221.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28834.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29291.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28347.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28925.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28493.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28629.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28387.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28946.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28630.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28746.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28803.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28348.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29009.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28443.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28665.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29272.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28359.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28688.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28465.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28599.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28496.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29082.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28663.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29028.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28515.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28392.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28837.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29003.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28361.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28416.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29233.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28434.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28777.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28473.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29045.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28424.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28846.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29206.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28653.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29061.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29304.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28859.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28850.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28774.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28345.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29305.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28825.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28647.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28524.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28405.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28924.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28848.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28721.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28329.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28550.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28527.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28712.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28502.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28396.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29236.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28791.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28322.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28358.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28853.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28838.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/29246.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28776.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29170.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28718.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29197.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28618.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/29244.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28909.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28488.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29098.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/29121.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28702.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28479.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28685.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28458.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28480.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28719.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29232.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28795.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28671.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28832.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28641.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29143.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28738.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28947.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28403.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29096.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28870.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28316.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29056.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29317.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28572.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28829.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29040.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29273.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28321.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28669.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28687.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28375.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28827.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29156.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28807.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29006.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28809.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28538.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28699.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28406.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29000.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29220.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28787.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29185.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28725.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28711.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28919.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/29069.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29234.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28667.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28506.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28997.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28505.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28717.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28608.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28385.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29126.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28636.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28952.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28442.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28697.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28942.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29123.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/28404.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28520.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28393.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29093.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28987.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28910.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29084.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29262.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28390.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/29103.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28833.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28917.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28453.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28411.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28962.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29054.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28703.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28576.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28628.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28931.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/29110.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28693.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29068.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28798.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28883.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29263.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28726.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/28566.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29222.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28862.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28388.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28489.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28626.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28364.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/29180.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28564.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28767.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28815.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28778.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28817.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29186.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28986.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28582.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28317.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28474.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/29095.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28391.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29306.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28781.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28706.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29242.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/29308.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28858.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28884.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28921.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28593.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29104.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/29032.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28539.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/29225.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/29161.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29016.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28331.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28418.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28399.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29022.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Q/28624.png → Predicted Character: Q\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28500.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/29238.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28705.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29293.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/29046.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28898.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28659.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28652.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28526.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28914.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/28810.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28495.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/28857.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28868.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28934.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29159.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/29228.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28760.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29065.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28896.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28963.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/S/28554.png → Predicted Character: S\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/28967.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/M/29268.png → Predicted Character: M\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/29215.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Y/28704.png → Predicted Character: Y\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29142.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28646.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/8/28426.png → Predicted Character: 8\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28939.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/28543.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/29051.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28640.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28745.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28580.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28897.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/28874.png → Predicted Character: 0\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/F/28757.png → Predicted Character: F\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/1/28995.png → Predicted Character: 1\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28384.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/X/28451.png → Predicted Character: X\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28315.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28849.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/28610.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/28644.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29149.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29055.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/K/28402.png → Predicted Character: K\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/29129.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/L/28979.png → Predicted Character: L\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/A/29292.png → Predicted Character: A\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/C/29258.png → Predicted Character: C\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28612.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28509.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/T/28339.png → Predicted Character: T\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28567.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28376.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/28880.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/R/28481.png → Predicted Character: R\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/29133.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/4/29178.png → Predicted Character: 4\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/6/28568.png → Predicted Character: 6\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/U/29312.png → Predicted Character: U\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28528.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28490.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28545.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/29188.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29127.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28999.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/28731.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/3/28673.png → Predicted Character: 3\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/P/29271.png → Predicted Character: P\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28531.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/5/28351.png → Predicted Character: 5\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/N/28549.png → Predicted Character: N\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/H/29227.png → Predicted Character: H\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29257.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29181.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/28681.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/E/28648.png → Predicted Character: E\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/9/29039.png → Predicted Character: 9\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/B/29005.png → Predicted Character: B\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/28741.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/V/28737.png → Predicted Character: V\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/Z/29245.png → Predicted Character: Z\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/7/29001.png → Predicted Character: 7\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/G/28686.png → Predicted Character: G\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/0/28670.png → Predicted Character: O\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/D/28611.png → Predicted Character: D\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/2/28312.png → Predicted Character: 2\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/W/29278.png → Predicted Character: W\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/J/28437.png → Predicted Character: J\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/I/28400.png → Predicted Character: I\n","Image: /kaggle/input/standard-ocr-dataset/data/testing_data/O/29090.png → Predicted Character: 0\n"]}],"source":["import random\n","\n","# Predict the labels\n","y_pred = model.predict(X_test)\n","\n","# Convert predictions from one-hot encoding to characters\n","y_pred_labels = np.argmax(y_pred, axis=1)\n","\n","# Convert integer labels back to characters\n","int_to_char = {i: char for char, i in char_to_int.items()}  # Reverse dictionary\n","predicted_chars = [int_to_char[i] for i in y_pred_labels]\n","\n","# Randomly select 10000 images\n","random_indices = random.sample(range(len(X_test)), 1000)\n","\n","# Print 10000 random predictions\n","for i in random_indices:\n","    print(f\"Image: {test_filenames[i]} → Predicted Character: {predicted_chars[i]}\")\n"]},{"cell_type":"code","execution_count":19,"id":"882b7a32","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:17:53.216136Z","iopub.status.busy":"2025-02-20T18:17:53.215614Z","iopub.status.idle":"2025-02-20T18:17:53.228964Z","shell.execute_reply":"2025-02-20T18:17:53.227732Z"},"papermill":{"duration":0.129342,"end_time":"2025-02-20T18:17:53.230655","exception":false,"start_time":"2025-02-20T18:17:53.101313","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["✅ Test Accuracy: 97.12%\n"]}],"source":["# Step 3: Evaluate Model Performance\n","# If your test dataset has labels, compare predictions vs actual labels.\n","\n","# # Get actual labels from folder names\n","# actual_labels = [os.path.basename(os.path.dirname(f)) for f in test_filenames]\n","\n","# # Compare predictions vs actual labels\n","# correct = np.sum(np.array(predicted_chars) == np.array(actual_labels))\n","# total = len(actual_labels)\n","# accuracy = correct / total * 100\n","\n","# print(f\"Test Accuracy: {accuracy:.2f}%\")\n","\n","import numpy as np\n","\n","# Get actual labels from folder names\n","actual_labels = [os.path.basename(os.path.dirname(f)) for f in test_filenames]\n","\n","# Convert both lists to NumPy arrays (ensure same type)\n","actual_labels = np.array(actual_labels, dtype=str)\n","predicted_chars = np.array(predicted_chars, dtype=str)\n","\n","# Ensure case consistency (optional)\n","actual_labels = np.char.upper(actual_labels)  # Convert to uppercase\n","predicted_chars = np.char.upper(predicted_chars)\n","\n","# Compare predictions vs actual labels\n","correct = np.sum(predicted_chars == actual_labels)\n","total = len(actual_labels)\n","accuracy = (correct / total) * 100\n","\n","print(f\"✅ Test Accuracy: {accuracy:.2f}%\")\n"]},{"cell_type":"code","execution_count":20,"id":"8ae1ac25","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:17:53.45747Z","iopub.status.busy":"2025-02-20T18:17:53.457191Z","iopub.status.idle":"2025-02-20T18:17:59.070961Z","shell.execute_reply":"2025-02-20T18:17:59.07006Z"},"papermill":{"duration":5.729223,"end_time":"2025-02-20T18:17:59.075503","exception":false,"start_time":"2025-02-20T18:17:53.34628","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 2000x2000 with 100 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Step 4: Display Sample Predictions\n","# To visually verify, display test images with predicted labels.\n","import matplotlib.pyplot as plt\n","import random\n","\n","# Randomly select 10000 images\n","random_indices = random.sample(range(len(X_test)), 1000)\n","\n","# Create a 10x10 grid for 10000 images\n","fig, axes = plt.subplots(10, 10, figsize=(20, 20))\n","\n","# Loop through 10000 random images\n","for idx, ax in zip(random_indices, axes.flatten()):\n","    ax.imshow(X_test[idx].reshape(32, 32), cmap='gray')\n","    ax.set_title(f\"Pred: {predicted_chars[idx]}\")\n","    ax.axis(\"off\")\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"code","execution_count":21,"id":"9b548847","metadata":{"execution":{"iopub.execute_input":"2025-02-20T18:17:59.302527Z","iopub.status.busy":"2025-02-20T18:17:59.302257Z","iopub.status.idle":"2025-02-20T18:17:59.305567Z","shell.execute_reply":"2025-02-20T18:17:59.304906Z"},"papermill":{"duration":0.117454,"end_time":"2025-02-20T18:17:59.306829","exception":false,"start_time":"2025-02-20T18:17:59.189375","status":"completed"},"tags":[]},"outputs":[],"source":["# import numpy as np\n","# import tensorflow as tf\n","# from tensorflow.keras.preprocessing.image import load_img, img_to_array\n","# import matplotlib.pyplot as plt\n","\n","# # Load trained model\n","# model = tf.keras.models.load_model(\"/kaggle/working/ocr_character_model.h5\")\n","\n","# # Define image size\n","# IMG_SIZE = (32, 32)\n","\n","# # Path to your custom image\n","# custom_img_path = \"/kaggle/input/custom_image.jpg\"  # Change this to your image path\n","\n","# # Load and preprocess image\n","# img = load_img(custom_img_path, target_size=IMG_SIZE, color_mode=\"grayscale\")\n","# img_array = img_to_array(img) / 255.0  # Normalize pixel values\n","# img_array = img_array.reshape(1, 32, 32, 1)  # Reshape for model input\n","\n","# # Predict character\n","# y_pred = model.predict(img_array)\n","# predicted_label = np.argmax(y_pred)  # Get the predicted class index\n","\n","# # Convert label index to character\n","# int_to_char = {i: char for char, i in char_to_int.items()}  # Reverse dictionary\n","# predicted_char = int_to_char[predicted_label]\n","\n","# # Display the image with the predicted character\n","# plt.imshow(img, cmap=\"gray\")\n","# plt.title(f\"Predicted Character: {predicted_char}\")\n","# plt.axis(\"off\")\n","# plt.show()\n","\n","# print(f\"✅ Model Prediction: {predicted_char}\")\n"]}],"metadata":{"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"datasetId":1634134,"sourceId":2685160,"sourceType":"datasetVersion"}],"dockerImageVersionId":30840,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":264.848729,"end_time":"2025-02-20T18:18:01.440125","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-02-20T18:13:36.591396","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}